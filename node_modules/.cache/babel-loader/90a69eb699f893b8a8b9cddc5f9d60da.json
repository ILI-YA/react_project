{"ast":null,"code":"var _jsxFileName = \"/home/iliya/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/<TeachMeSkills>/test_react_project/match-match-game/src/components/pages/Game/components/Field.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Card1 from '../../../common/Card1';\nimport { valueOfCards } from './ValueOfCards';\n\nclass Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      field: this.generateFields(this.props.difficulty),\n      cardType: this.props.cardType\n    };\n  }\n\n  generateFields(difficulty = 4) {\n    let valueOfCard = valueOfCards;\n    let numberOfFields = difficulty * difficulty;\n    let cardsValues = [];\n    let j = 0;\n\n    for (let i = 0; i < numberOfFields; i = i + 2) {\n      let card = valueOfCard[j];\n      cardsValues.push(card, card);\n\n      if (j === valueOfCard.length - 1) {\n        j = 0;\n      } else {\n        j++;\n      }\n    }\n\n    const _ = require('lodash');\n\n    cardsValues = _.shuffle(cardsValues);\n    let k = 0;\n    let fields = [];\n\n    for (let i = 0; i < difficulty; i++) {\n      fields[i] = [];\n\n      for (let j = 0; j < difficulty; j++) {\n        fields[i].push({\n          value: cardsValues[k],\n          flipped: 'false',\n          matched: 'false'\n        });\n        k++;\n      }\n    }\n\n    return this.setState({\n      field: fields\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, this.state.field.map((row, rowIndex) => row.map((col, colIndex) => /*#__PURE__*/React.createElement(Card1, {\n      row: rowIndex,\n      col: colIndex,\n      value: this.state.field[rowIndex][colIndex].value,\n      flipped: this.state.field[rowIndex][colIndex].flipped,\n      matched: this.state.field[rowIndex][colIndex].matched,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  difficulty: 4,\n  cardType: 'card1'\n});\n\nexport default connect(mapStateToProps)(Field);","map":{"version":3,"sources":["/home/iliya/Рабочий стол/<TeachMeSkills>/test_react_project/match-match-game/src/components/pages/Game/components/Field.jsx"],"names":["React","connect","Card1","valueOfCards","Field","Component","constructor","props","state","field","generateFields","difficulty","cardType","valueOfCard","numberOfFields","cardsValues","j","i","card","push","length","_","require","shuffle","k","fields","value","flipped","matched","setState","render","map","row","rowIndex","col","colIndex","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Card1 from '../../../common/Card1'\n\nimport { valueOfCards } from './ValueOfCards'\n\n\nclass Field extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            field: this.generateFields(this.props.difficulty),\n            cardType: this.props.cardType\n        }\n    }\n    \n\n   \n    generateFields(difficulty = 4) {\n        let valueOfCard = valueOfCards;\n        let numberOfFields = difficulty * difficulty\n        let cardsValues = []\n        let j = 0\n    \n        for(let i=0; i < numberOfFields; i=i+2) {\n            let card = valueOfCard[j]\n            cardsValues.push(card, card)\n    \n            if(j === valueOfCard.length - 1){\n                j = 0\n            } else {\n                j++\n            }\n        }\n       \n        const _ = require('lodash')\n        cardsValues = _.shuffle(cardsValues)\n    \n        let k = 0\n        let fields = []\n        for (let i = 0; i < difficulty; i++) {\n            fields[i] = []\n            for (let j = 0; j < difficulty; j++) {\n                fields[i].push({\n                    value: cardsValues[k],\n                    flipped: 'false',\n                    matched: 'false'\n                })\n                k++\n            }\n        }\n        return this.setState({field: fields})\n    }\n    \n    \n\n    render(){\n        return(\n        <div className='cards'>{this.state.field.map((row, rowIndex) => row.map((col, colIndex) => \n        <Card1 \n        row={rowIndex} \n        col={colIndex} \n        value={this.state.field[rowIndex][colIndex].value}\n        flipped={this.state.field[rowIndex][colIndex].flipped}\n        matched={this.state.field[rowIndex][colIndex].matched}\n        \n        />\n        ))}\n        </div>   \n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n   difficulty: 4,\n   cardType: 'card1'\n})\n\nexport default connect(mapStateToProps)(Field)"]},"metadata":{},"sourceType":"module"}