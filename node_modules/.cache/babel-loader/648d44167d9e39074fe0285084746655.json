{"ast":null,"code":"var _jsxFileName = \"/home/iliya/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/<TeachMeSkills>/test_react_project/match-match-game/src/components/pages/Game/Game.jsx\";\nimport React from 'react';\nimport startTime from './components/Timer';\nconst Field_Cards_Easy = [{\n  value: 1\n}, {\n  value: 2\n}, {\n  value: 3\n}, {\n  value: 4\n}, {\n  value: 5\n}, {\n  value: 6\n}, {\n  value: 7\n}, {\n  value: 8\n}, {\n  value: 1\n}, {\n  value: 2\n}, {\n  value: 3\n}, {\n  value: 4\n}, {\n  value: 5\n}, {\n  value: 6\n}, {\n  value: 7\n}, {\n  value: 8\n}];\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n\n    this.onNewGameClick = () => {\n      this.props.history.push('/welcome');\n    };\n\n    this.onRestartClick = () => {\n      this.props.history.push('/game');\n    };\n\n    this.onFlipClick = () => {\n      return this.value;\n    };\n\n    this.startTime = () => {\n      var this_date = new Date();\n      setInterval(function () {\n        var new_date = new Date() - this_date;\n        var sec = Math.abs(Math.floor(new_date / 1000) % 60); //sek\n\n        var min = Math.abs(Math.floor(new_date / 1000 / 60) % 60); //min\n\n        var hours = Math.abs(Math.floor(new_date / 1000 / 60 / 60) % 24); //hours\n\n        if (sec.toString().length == 1) sec = '0' + sec;\n        if (min.toString().length == 1) min = '0' + min;\n        if (hours.toString().length == 1) hours = '0' + hours;\n        let timer = hours + ':' + min + ':' + sec;\n      }, 100);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 12\n        }\n      }, this.setInterval());\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(this.startTime, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"counter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 20\n      }\n    }, \"0\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 16\n      }\n    }, Field_Cards_Easy.map(({\n      value\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      value: value,\n      onClick: this.onFlipClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 24\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.onRestartClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 20\n      }\n    }, \"RESTART\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      onClick: this.onNewGameClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }\n    }, \"new game\")));\n  }\n\n}","map":{"version":3,"sources":["/home/iliya/Рабочий стол/<TeachMeSkills>/test_react_project/match-match-game/src/components/pages/Game/Game.jsx"],"names":["React","startTime","Field_Cards_Easy","value","Game","Component","constructor","onNewGameClick","props","history","push","onRestartClick","onFlipClick","this_date","Date","setInterval","new_date","sec","Math","abs","floor","min","hours","toString","length","timer","state","render","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport startTime from './components/Timer'\n\n\n\nconst Field_Cards_Easy = [\n    {\n     value: 1,\n    },\n    {\n     value: 2,\n    },\n    {\n     value: 3,\n    },\n    {\n     value: 4,\n    },\n    {\n     value: 5,\n    },\n    {\n     value: 6,\n    },\n    {\n     value: 7,\n    },\n    {\n     value: 8,\n    },\n    {\n     value: 1,\n    },\n    {\n     value: 2,\n    },\n    {\n     value: 3,\n    },\n    {\n     value: 4,\n    },\n    {\n     value: 5,\n    },\n    {\n     value: 6,\n    },\n    {\n     value: 7,\n    },\n    {\n     value: 8,\n    }  \n ];\n\nexport default class Game extends React.Component {\n    constructor(){\n        super();\n        this.state = {};\n    }\n\n    onNewGameClick = () => {\n        this.props.history.push('/welcome');\n    }\n\n    onRestartClick = () => {\n        this.props.history.push('/game');\n    }\n\n    onFlipClick = () => {\n        return this.value\n    }\n\n    startTime = () => {\n \n        var this_date = new Date();\n        setInterval(function(){\n          var new_date = new Date() - this_date;\n          var sec   = Math.abs(Math.floor(new_date/1000)%60); //sek\n          var min   = Math.abs(Math.floor(new_date/1000/60)%60); //min\n          var hours = Math.abs(Math.floor(new_date/1000/60/60)%24); //hours\n          if (sec.toString().length   == 1) sec   = '0' + sec;\n          if (min.toString().length   == 1) min   = '0' + min;\n          if (hours.toString().length == 1) hours = '0' + hours;\n          let timer = (hours + ':' + min + ':' + sec);\n        },100);\n    return <div>{this.setInterval()}</div>\n      };\n\n    render(){\n        return (\n            <div className='game'>\n               <header>\n                   <this.startTime />\n                   <div className='counter'>0</div>\n               </header>\n               <div className='playField'>\n                   {Field_Cards_Easy.map(({value}) => (\n                       <div \n                       className='card'\n                       value={value}\n                       \n                       onClick={this.onFlipClick}>\n                       </div>\n                   ))}\n               </div>\n               <div>\n                   <button type='submit' onClick={this.onRestartClick}>RESTART</button>\n                   <button type='reset' onClick={this.onNewGameClick}>new game</button>\n               </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}